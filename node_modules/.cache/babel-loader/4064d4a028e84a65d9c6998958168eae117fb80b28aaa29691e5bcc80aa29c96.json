{"ast":null,"code":"const handleLogin = async e => {\n  e.preventDefault();\n  try {\n    const response = await fetch(\"http://localhost:5000/api/admin/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Login failed\");\n    }\n    const data = await response.json();\n    localStorage.setItem(\"token\", data.token);\n    navigate(\"/admin/messages\");\n  } catch (error) {\n    setError(\"Network error: \" + error.message);\n  }\n};","map":{"version":3,"names":["handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","username","password","ok","Error","data","json","localStorage","setItem","token","navigate","error","setError","message"],"sources":["C:/Users/PC/linktodigital/src/pages/AdminLogin.js"],"sourcesContent":["const handleLogin = async (e) => {\r\n  e.preventDefault();\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/api/admin/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Login failed\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    localStorage.setItem(\"token\", data.token);\r\n    navigate(\"/admin/messages\");\r\n  } catch (error) {\r\n    setError(\"Network error: \" + error.message);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAOC,CAAC,IAAK;EAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACjC;IAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;IACzCC,QAAQ,CAAC,iBAAiB,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,QAAQ,CAAC,iBAAiB,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC7C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}